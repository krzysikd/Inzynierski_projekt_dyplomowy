if(Moc > Zuzycie) {
# Obliczanie nadmiaru energii
nadmiar <- Moc - Zuzycie
# Sprawdzanie, ile miejsca jest dostępne w magazynie
miejsce_w_magazynie <- pojemnosc_magazynu - stan_magazynu
# Obliczanie ile energii możemy wprowadzić do magazynu
do_magazynu <- min(nadmiar, miejsce_w_magazynie)
dane_z_magazynem$WlozonoDoMagazynu[i] <- do_magazynu
# Aktualizacja stanu magazynu
stan_magazynu <- stan_magazynu + do_magazynu
# Jeśli moc z paneli jest mniejsza niż zużycie
} else {
# Obliczanie, ile energii brakuje
brakuje <- Zuzycie - Moc
# Obliczanie ile energii jest dostępne w magazynie uwzględniając sprawność magazynowania
dostepne_w_magazynie <- stan_magazynu * sprawnosc_magazynowania
# Obliczanie ile energii możemy pobrać z magazynu
z_magazynu <- min(brakuje, dostepne_w_magazynie)
dane_z_magazynem$PobranoZMagazynu[i] <- z_magazynu
# Aktualizacja stanu magazynu po pobraniu energii
stan_magazynu <- stan_magazynu - z_magazynu/sprawnosc_magazynowania
# Obliczanie ile energii jeszcze brakuje po wykorzystaniu magazynu
brakuje <- brakuje - z_magazynu
# Dodawanie informacji o dokupionej energii
dane_z_magazynem$DokupioneZSieci[i] <- brakuje
}
}
# Podsumowanie kosztów zakupionej energii z wykorzystaniem magazynu
roczne_koszty_z_magazynem <- dane_z_magazynem %>%
group_by(Rok) %>%
summarise(RoczneWydatkiZakupionejEnergii = sum(DokupioneZSieci * RCE, na.rm = TRUE))
# Obliczamy roczne koszty na podstawie danych_z_magazynem
roczne_koszty_magazyn <- dane_z_magazynem %>%
group_by(Rok) %>%
summarise(RoczneWydatkiZakupionejEnergii = sum(DokupioneZSieci * RCE, na.rm = TRUE))
# Dodajemy skumulowany koszt do danych o rocznych kosztach
roczne_koszty_magazyn <- roczne_koszty_magazyn %>%
arrange(Rok) %>%
mutate(SkumulowaneWydatkiZakupionejEnergii = cumsum(RoczneWydatkiZakupionejEnergii))
# Obliczamy roczne koszty na podstawie danych_z_magazynem
roczne_koszty_magazyn <- dane_z_magazynem %>%
group_by(Rok) %>%
summarise(RoczneWydatkiZakupionejEnergii = sum(DokupioneZSieci * RCE, na.rm = TRUE))
# Dodajemy skumulowany koszt do danych o rocznych kosztach
roczne_koszty_magazyn <- roczne_koszty_magazyn %>%
arrange(Rok) %>%
mutate(SkumulowaneWydatkiZakupionejEnergii = cumsum(RoczneWydatkiZakupionejEnergii))
# Ustawienie kolorów
kolory <- brewer.pal(9, "Set1")
hchart(roczne_koszty_magazyn, "line", hcaes(x = Rok, y = SkumulowaneWydatkiZakupionejEnergii)) %>%
hc_title(text = "Skumulowane roczne koszty Energii przy użyciu Magazynu Energii") %>%
hc_subtitle(text = "Analiza kosztów energii na przestrzeni lat z uwzględnieniem magazynowania nadmiarów energii z PV") %>%
hc_xAxis(title = list(text = "Rok"), categories = roczne_koszty_magazyn$Rok, crosshair = TRUE) %>%
hc_yAxis(title = list(text = "Skumulowany Koszt [PLN]"), opposite = FALSE, crosshair = TRUE) %>%
hc_add_series(roczne_koszty_magazyn, "point", hcaes(x = Rok, y = SkumulowaneWydatkiZakupionejEnergii), name = "Koszt Zakupionej Energii",
dataLabels = list(enabled = TRUE, format = '{point.y:,.0f} zł', style = list(fontSize = '10px'))) %>%
hc_tooltip(headerFormat = "<b>Rok {point.x}</b><br/>",
pointFormat = "Skumulowany Koszt: <b>{point.y:.2f} zł</b>") %>%
hc_colors(kolory) %>%
hc_chart(zoomType = 'xy') %>%
hc_exporting(enabled = TRUE) %>%
hc_legend(enabled = TRUE)
htmlwidgets::saveWidget(hc4.2d, "4.2d.html", selfcontained = TRUE)
# Wstępne parametry magazynu
pojemnosc_magazynu <- 15
sprawnosc_magazynowania <- 0.90
stan_magazynu <- 0
# Tworzenie kopii danych z panelami i dodanie nowych kolumn
dane_z_magazynem <- dane_z_panelami
dane_z_magazynem$PobranoZMagazynu <- 0
dane_z_magazynem$DokupioneZSieci <- 0
dane_z_magazynem$WlozonoDoMagazynu <- 0
# Iteracja przez każdy wiersz (czyli każdą godzinę)
for(i in 1:nrow(dane_z_magazynem)) {
# Pobieranie danych dla bieżącej godziny
Moc <- dane_z_magazynem$Moc[i]
Zuzycie <- dane_z_magazynem$Zuzycie[i]
# Jeśli moc z paneli jest większa niż zużycie
if(Moc > Zuzycie) {
# Obliczanie nadmiaru energii
nadmiar <- Moc - Zuzycie
# Sprawdzanie, ile miejsca jest dostępne w magazynie
miejsce_w_magazynie <- pojemnosc_magazynu - stan_magazynu
# Obliczanie ile energii możemy wprowadzić do magazynu
do_magazynu <- min(nadmiar, miejsce_w_magazynie)
dane_z_magazynem$WlozonoDoMagazynu[i] <- do_magazynu
# Aktualizacja stanu magazynu
stan_magazynu <- stan_magazynu + do_magazynu
# Jeśli moc z paneli jest mniejsza niż zużycie
} else {
# Obliczanie, ile energii brakuje
brakuje <- Zuzycie - Moc
# Obliczanie ile energii jest dostępne w magazynie uwzględniając sprawność magazynowania
dostepne_w_magazynie <- stan_magazynu * sprawnosc_magazynowania
# Obliczanie ile energii możemy pobrać z magazynu
z_magazynu <- min(brakuje, dostepne_w_magazynie)
dane_z_magazynem$PobranoZMagazynu[i] <- z_magazynu
# Aktualizacja stanu magazynu po pobraniu energii
stan_magazynu <- stan_magazynu - z_magazynu/sprawnosc_magazynowania
# Obliczanie ile energii jeszcze brakuje po wykorzystaniu magazynu
brakuje <- brakuje - z_magazynu
# Dodawanie informacji o dokupionej energii
dane_z_magazynem$DokupioneZSieci[i] <- brakuje
}
}
# Podsumowanie kosztów zakupionej energii z wykorzystaniem magazynu
roczne_koszty_z_magazynem <- dane_z_magazynem %>%
group_by(Rok) %>%
summarise(RoczneWydatkiZakupionejEnergii = sum(DokupioneZSieci * RCE, na.rm = TRUE))
# Grupowanie i obliczanie kosztów miesięcznych dla energii dokupionej z magazynem
koszt_miesieczny_magazyn <- dane_z_magazynem %>%
group_by(Rok, Miesiac) %>%
summarise(KosztMiesiecznyMagazyn = sum(DokupioneZSieci * RCE, na.rm=TRUE))
# Zamiana numeru miesiąca na polską nazwę
koszt_miesieczny_magazyn$Miesiac <- polskie_miesiace[koszt_miesieczny_magazyn$Miesiac]
# Ustawienie kolorów
kolory <- brewer.pal(9, "Set1")
hchart(roczne_koszty_magazyn, "line", hcaes(x = Rok, y = SkumulowaneWydatkiZakupionejEnergii)) %>%
hc_title(text = "Skumulowane roczne koszty Energii przy użyciu Magazynu Energii") %>%
hc_subtitle(text = "Analiza kosztów energii na przestrzeni lat z uwzględnieniem magazynowania nadmiarów energii z PV") %>%
hc_xAxis(title = list(text = "Rok"), categories = roczne_koszty_magazyn$Rok, crosshair = TRUE) %>%
hc_yAxis(title = list(text = "Skumulowany Koszt [PLN]"), opposite = FALSE, crosshair = TRUE) %>%
hc_add_series(roczne_koszty_magazyn, "point", hcaes(x = Rok, y = SkumulowaneWydatkiZakupionejEnergii), name = "Koszt Zakupionej Energii",
dataLabels = list(enabled = TRUE, format = '{point.y:,.0f} zł', style = list(fontSize = '10px'))) %>%
hc_tooltip(headerFormat = "<b>Rok {point.x}</b><br/>",
pointFormat = "Skumulowany Koszt: <b>{point.y:.2f} zł</b>") %>%
hc_colors(kolory) %>%
hc_chart(zoomType = 'xy') %>%
hc_exporting(enabled = TRUE) %>%
hc_legend(enabled = TRUE)
htmlwidgets::saveWidget(hc4.2d, "4.2d.html", selfcontained = TRUE)
# Wstępne parametry magazynu
pojemnosc_magazynu <- 2
sprawnosc_magazynowania <- 0.90
stan_magazynu <- 0
# Tworzenie kopii danych z panelami i dodanie nowych kolumn
dane_z_magazynem <- dane_z_panelami
dane_z_magazynem$PobranoZMagazynu <- 0
dane_z_magazynem$DokupioneZSieci <- 0
dane_z_magazynem$WlozonoDoMagazynu <- 0
# Iteracja przez każdy wiersz (czyli każdą godzinę)
for(i in 1:nrow(dane_z_magazynem)) {
# Pobieranie danych dla bieżącej godziny
Moc <- dane_z_magazynem$Moc[i]
Zuzycie <- dane_z_magazynem$Zuzycie[i]
# Jeśli moc z paneli jest większa niż zużycie
if(Moc > Zuzycie) {
# Obliczanie nadmiaru energii
nadmiar <- Moc - Zuzycie
# Sprawdzanie, ile miejsca jest dostępne w magazynie
miejsce_w_magazynie <- pojemnosc_magazynu - stan_magazynu
# Obliczanie ile energii możemy wprowadzić do magazynu
do_magazynu <- min(nadmiar, miejsce_w_magazynie)
dane_z_magazynem$WlozonoDoMagazynu[i] <- do_magazynu
# Aktualizacja stanu magazynu
stan_magazynu <- stan_magazynu + do_magazynu
# Jeśli moc z paneli jest mniejsza niż zużycie
} else {
# Obliczanie, ile energii brakuje
brakuje <- Zuzycie - Moc
# Obliczanie ile energii jest dostępne w magazynie uwzględniając sprawność magazynowania
dostepne_w_magazynie <- stan_magazynu * sprawnosc_magazynowania
# Obliczanie ile energii możemy pobrać z magazynu
z_magazynu <- min(brakuje, dostepne_w_magazynie)
dane_z_magazynem$PobranoZMagazynu[i] <- z_magazynu
# Aktualizacja stanu magazynu po pobraniu energii
stan_magazynu <- stan_magazynu - z_magazynu/sprawnosc_magazynowania
# Obliczanie ile energii jeszcze brakuje po wykorzystaniu magazynu
brakuje <- brakuje - z_magazynu
# Dodawanie informacji o dokupionej energii
dane_z_magazynem$DokupioneZSieci[i] <- brakuje
}
}
# Podsumowanie kosztów zakupionej energii z wykorzystaniem magazynu
roczne_koszty_z_magazynem <- dane_z_magazynem %>%
group_by(Rok) %>%
summarise(RoczneWydatkiZakupionejEnergii = sum(DokupioneZSieci * RCE, na.rm = TRUE))
# Grupowanie i obliczanie kosztów miesięcznych dla energii dokupionej z magazynem
koszt_miesieczny_magazyn <- dane_z_magazynem %>%
group_by(Rok, Miesiac) %>%
summarise(KosztMiesiecznyMagazyn = sum(DokupioneZSieci * RCE, na.rm=TRUE))
# Zamiana numeru miesiąca na polską nazwę
koszt_miesieczny_magazyn$Miesiac <- polskie_miesiace[koszt_miesieczny_magazyn$Miesiac]
# Obliczamy roczne koszty na podstawie danych_z_magazynem
roczne_koszty_magazyn <- dane_z_magazynem %>%
group_by(Rok) %>%
summarise(RoczneWydatkiZakupionejEnergii = sum(DokupioneZSieci * RCE, na.rm = TRUE))
# Dodajemy skumulowany koszt do danych o rocznych kosztach
roczne_koszty_magazyn <- roczne_koszty_magazyn %>%
arrange(Rok) %>%
mutate(SkumulowaneWydatkiZakupionejEnergii = cumsum(RoczneWydatkiZakupionejEnergii))
# Ustawienie kolorów
kolory <- brewer.pal(9, "Set1")
hchart(roczne_koszty_magazyn, "line", hcaes(x = Rok, y = SkumulowaneWydatkiZakupionejEnergii)) %>%
hc_title(text = "Skumulowane roczne koszty Energii przy użyciu Magazynu Energii") %>%
hc_subtitle(text = "Analiza kosztów energii na przestrzeni lat z uwzględnieniem magazynowania nadmiarów energii z PV") %>%
hc_xAxis(title = list(text = "Rok"), categories = roczne_koszty_magazyn$Rok, crosshair = TRUE) %>%
hc_yAxis(title = list(text = "Skumulowany Koszt [PLN]"), opposite = FALSE, crosshair = TRUE) %>%
hc_add_series(roczne_koszty_magazyn, "point", hcaes(x = Rok, y = SkumulowaneWydatkiZakupionejEnergii), name = "Koszt Zakupionej Energii",
dataLabels = list(enabled = TRUE, format = '{point.y:,.0f} zł', style = list(fontSize = '10px'))) %>%
hc_tooltip(headerFormat = "<b>Rok {point.x}</b><br/>",
pointFormat = "Skumulowany Koszt: <b>{point.y:.2f} zł</b>") %>%
hc_colors(kolory) %>%
hc_chart(zoomType = 'xy') %>%
hc_exporting(enabled = TRUE) %>%
hc_legend(enabled = TRUE)
htmlwidgets::saveWidget(hc4.2d, "4.2d.html", selfcontained = TRUE)
# Definicje różnych pojemności magazynu
pojemnosci_magazynu <- c(2, 8, 9, 10)
# Zbieranie danych do analizy
wyniki_rozne_pojemnosci <- data.frame()
# Pętla dla każdej pojemności magazynu
for(pojemnosc in pojemnosci_magazynu) {
pojemnosc_magazynu <- pojemnosc
sprawnosc_magazynowania <- 0.90
stan_magazynu <- 0
# Przetwarzanie danych dla każdej pojemności
dane_z_magazynem <- dane_z_panelami
# Dodawanie nowych kolumn
dane_z_magazynem$PobranoZMagazynu <- 0
dane_z_magazynem$DokupioneZSieci <- 0
dane_z_magazynem$WlozonoDoMagazynu <- 0
for(i in 1:nrow(dane_z_magazynem)) {
Moc <- dane_z_magazynem$Moc[i]
Zuzycie <- dane_z_magazynem$Zuzycie[i]
if(Moc > Zuzycie) {
nadmiar <- Moc - Zuzycie
miejsce_w_magazynie <- pojemnosc_magazynu - stan_magazynu
do_magazynu <- min(nadmiar, miejsce_w_magazynie)
dane_z_magazynem$WlozonoDoMagazynu[i] <- do_magazynu
stan_magazynu <- min(stan_magazynu + do_magazynu, pojemnosc_magazynu)
} else {
brakuje <- Zuzycie - Moc
dostepne_w_magazynie <- stan_magazynu * sprawnosc_magazynowania
z_magazynu <- min(brakuje, dostepne_w_magazynie)
dane_z_magazynem$PobranoZMagazynu[i] <- z_magazynu
stan_magazynu <- max(stan_magazynu - z_magazynu/sprawnosc_magazynowania, 0)
brakuje <- brakuje - z_magazynu
dane_z_magazynem$DokupioneZSieci[i] <- brakuje
}
}
# Podsumowanie kosztów dla każdej pojemności
roczne_koszty_magazyn <- dane_z_magazynem %>%
group_by(Rok) %>%
summarise(RoczneWydatkiZakupionejEnergii = sum(DokupioneZSieci * RCE, na.rm = TRUE))
wyniki_rozne_pojemnosci <- rbind(wyniki_rozne_pojemnosci, transform(roczne_koszty_magazyn, PojemnoscMagazynu = pojemnosc))
}
# Obliczanie skumulowanych wydatków
wynik_finalowy <- wyniki_rozne_pojemnosci %>%
arrange(Rok, PojemnoscMagazynu) %>%
group_by(PojemnoscMagazynu) %>%
mutate(SkumulowaneWydatki = cumsum(RoczneWydatkiZakupionejEnergii)) %>%
ungroup()
hchart(wynik_finalowy, "line", hcaes(x = Rok, y = SkumulowaneWydatki, group = PojemnoscMagazynu)) %>%
hc_title(text = "Skumulowane Roczne Wydatki na Energię przy Użyciu Magazynu Energii") %>%
hc_subtitle(text = "Analiza wydatków na energię na przestrzeni lat z uwzględnieniem różnych pojemności magazynów") %>%
hc_xAxis(title = list(text = "Rok"), tickInterval = 1) %>%
hc_yAxis(title = list(text = "Skumulowane Wydatki [PLN]")) %>%
hc_colors(c("#7cb5ec", "#434348", "#90ed7d", "#f7a35c", "#8085e9")) %>%
hc_legend(title = list(text = "Pojemność Magazynu"), enabled = TRUE, layout = "vertical", align = "right", verticalAlign = "middle", useHTML = TRUE, labelFormatter = JS("function() { return this.name + ' <span style=\"color: ' + this.color + '\">&#9679;</span>'; }")) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(headerFormat = "<b>Rok {point.key}</b><br/>",
pointFormat = "<span style='color:{series.color}'>\u25CF</span> {series.name}: {point.y:,.2f} zł<br/>",
shared = TRUE,
crosshairs = TRUE)
# Definicje różnych pojemności magazynu
pojemnosci_magazynu <- c(7, 10, 13, 15)
# Definicje różnych pojemności magazynu
pojemnosci_magazynu <- c(5, 7, 10, 13, 15)
# Zbieranie danych do analizy
wyniki_rozne_pojemnosci <- data.frame()
# Pętla dla każdej pojemności magazynu
for(pojemnosc in pojemnosci_magazynu) {
pojemnosc_magazynu <- pojemnosc
sprawnosc_magazynowania <- 0.90
stan_magazynu <- 0
# Przetwarzanie danych dla każdej pojemności
dane_z_magazynem <- dane_z_panelami
# Dodawanie nowych kolumn
dane_z_magazynem$PobranoZMagazynu <- 0
dane_z_magazynem$DokupioneZSieci <- 0
dane_z_magazynem$WlozonoDoMagazynu <- 0
for(i in 1:nrow(dane_z_magazynem)) {
Moc <- dane_z_magazynem$Moc[i]
Zuzycie <- dane_z_magazynem$Zuzycie[i]
if(Moc > Zuzycie) {
nadmiar <- Moc - Zuzycie
miejsce_w_magazynie <- pojemnosc_magazynu - stan_magazynu
do_magazynu <- min(nadmiar, miejsce_w_magazynie)
dane_z_magazynem$WlozonoDoMagazynu[i] <- do_magazynu
stan_magazynu <- min(stan_magazynu + do_magazynu, pojemnosc_magazynu)
} else {
brakuje <- Zuzycie - Moc
dostepne_w_magazynie <- stan_magazynu * sprawnosc_magazynowania
z_magazynu <- min(brakuje, dostepne_w_magazynie)
dane_z_magazynem$PobranoZMagazynu[i] <- z_magazynu
stan_magazynu <- max(stan_magazynu - z_magazynu/sprawnosc_magazynowania, 0)
brakuje <- brakuje - z_magazynu
dane_z_magazynem$DokupioneZSieci[i] <- brakuje
}
}
# Podsumowanie kosztów dla każdej pojemności
roczne_koszty_magazyn <- dane_z_magazynem %>%
group_by(Rok) %>%
summarise(RoczneWydatkiZakupionejEnergii = sum(DokupioneZSieci * RCE, na.rm = TRUE))
wyniki_rozne_pojemnosci <- rbind(wyniki_rozne_pojemnosci, transform(roczne_koszty_magazyn, PojemnoscMagazynu = pojemnosc))
}
# Obliczanie skumulowanych wydatków
wynik_finalowy <- wyniki_rozne_pojemnosci %>%
arrange(Rok, PojemnoscMagazynu) %>%
group_by(PojemnoscMagazynu) %>%
mutate(SkumulowaneWydatki = cumsum(RoczneWydatkiZakupionejEnergii)) %>%
ungroup()
hchart(wynik_finalowy, "line", hcaes(x = Rok, y = SkumulowaneWydatki, group = PojemnoscMagazynu)) %>%
hc_title(text = "Skumulowane Roczne Wydatki na Energię przy Użyciu Magazynu Energii") %>%
hc_subtitle(text = "Analiza wydatków na energię na przestrzeni lat z uwzględnieniem różnych pojemności magazynów") %>%
hc_xAxis(title = list(text = "Rok"), tickInterval = 1) %>%
hc_yAxis(title = list(text = "Skumulowane Wydatki [PLN]")) %>%
hc_colors(c("#7cb5ec", "#434348", "#90ed7d", "#f7a35c", "#8085e9")) %>%
hc_legend(title = list(text = "Pojemność Magazynu"), enabled = TRUE, layout = "vertical", align = "right", verticalAlign = "middle", useHTML = TRUE, labelFormatter = JS("function() { return this.name + ' <span style=\"color: ' + this.color + '\">&#9679;</span>'; }")) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(headerFormat = "<b>Rok {point.key}</b><br/>",
pointFormat = "<span style='color:{series.color}'>\u25CF</span> {series.name}: {point.y:,.2f} zł<br/>",
shared = TRUE,
crosshairs = TRUE)
# Obliczanie skumulowanych wydatków
wynik_finalowy1 <- wyniki_rozne_pojemnosci %>%
arrange(Rok, PojemnoscMagazynu) %>%
group_by(PojemnoscMagazynu) %>%
mutate(SkumulowaneWydatki = cumsum(RoczneWydatkiZakupionejEnergii)) %>%
ungroup()
hchart(wynik_finalowy1, "line", hcaes(x = Rok, y = SkumulowaneWydatki, group = PojemnoscMagazynu)) %>%
hc_title(text = "Skumulowane Roczne Wydatki na Energię przy Użyciu Magazynu Energii") %>%
hc_subtitle(text = "Analiza wydatków na energię na przestrzeni lat z uwzględnieniem różnych pojemności magazynów") %>%
hc_xAxis(title = list(text = "Rok"), tickInterval = 1) %>%
hc_yAxis(title = list(text = "Skumulowane Wydatki [PLN]")) %>%
hc_colors(c("#7cb5ec", "#434348", "#90ed7d", "#f7a35c", "#8085e9")) %>%
hc_legend(title = list(text = "Pojemność Magazynu"), enabled = TRUE, layout = "vertical", align = "right", verticalAlign = "middle", useHTML = TRUE, labelFormatter = JS("function() { return this.name + ' <span style=\"color: ' + this.color + '\">&#9679;</span>'; }")) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(headerFormat = "<b>Rok {point.key}</b><br/>",
pointFormat = "<span style='color:{series.color}'>\u25CF</span> {series.name}: {point.y:,.2f} zł<br/>",
shared = TRUE,
crosshairs = TRUE)
# Wykres Słupkowy Porównujący Roczne Koszty Zakupionej Energii dla Różnych Pojemności Magazynu
ggplot(wyniki, aes(x = factor(Rok), y = RoczneWydatkiZakupionejEnergii, fill = factor(PojemnoscMagazynu))) +
geom_bar(stat = "identity", position = position_dodge()) +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12),
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
legend.title = element_text(face = "bold"),
legend.position = "bottom"
) +
labs(
title = "Roczne Koszty Zakupionej Energii w Zależności od Pojemności Magazynu",
x = "Rok",
y = "Koszt Zakupionej Energii [PLN]",
fill = "Pojemność Magazynu"
) +
geom_text(aes(label=sprintf("%.2f", RoczneWydatkiZakupionejEnergii)), vjust=-0.3, position = position_dodge(0.9), size=3)
# Wykres Słupkowy Porównujący Roczne Koszty Zakupionej Energii dla Różnych Pojemności Magazynu
ggplot(wyniki_rozne_pojemnosci, aes(x = factor(Rok), y = RoczneWydatkiZakupionejEnergii, fill = factor(PojemnoscMagazynu))) +
geom_bar(stat = "identity", position = position_dodge()) +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12),
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
legend.title = element_text(face = "bold"),
legend.position = "bottom"
) +
labs(
title = "Roczne Koszty Zakupionej Energii w Zależności od Pojemności Magazynu",
x = "Rok",
y = "Koszt Zakupionej Energii [PLN]",
fill = "Pojemność Magazynu"
) +
geom_text(aes(label=sprintf("%.2f", RoczneWydatkiZakupionejEnergii)), vjust=-0.3, position = position_dodge(0.9), size=3)
# Definicje różnych pojemności magazynu
pojemnosci_magazynu <- c(2, 5, 7, 10, 13, 15, 17)
# Zbieranie danych do analizy
wyniki_rozne_pojemnosci <- data.frame()
# Pętla dla każdej pojemności magazynu
for(pojemnosc in pojemnosci_magazynu) {
pojemnosc_magazynu <- pojemnosc
sprawnosc_magazynowania <- 0.90
stan_magazynu <- 0
# Przetwarzanie danych dla każdej pojemności
dane_z_magazynem <- dane_z_panelami
# Dodawanie nowych kolumn
dane_z_magazynem$PobranoZMagazynu <- 0
dane_z_magazynem$DokupioneZSieci <- 0
dane_z_magazynem$WlozonoDoMagazynu <- 0
for(i in 1:nrow(dane_z_magazynem)) {
Moc <- dane_z_magazynem$Moc[i]
Zuzycie <- dane_z_magazynem$Zuzycie[i]
if(Moc > Zuzycie) {
nadmiar <- Moc - Zuzycie
miejsce_w_magazynie <- pojemnosc_magazynu - stan_magazynu
do_magazynu <- min(nadmiar, miejsce_w_magazynie)
dane_z_magazynem$WlozonoDoMagazynu[i] <- do_magazynu
stan_magazynu <- min(stan_magazynu + do_magazynu, pojemnosc_magazynu)
} else {
brakuje <- Zuzycie - Moc
dostepne_w_magazynie <- stan_magazynu * sprawnosc_magazynowania
z_magazynu <- min(brakuje, dostepne_w_magazynie)
dane_z_magazynem$PobranoZMagazynu[i] <- z_magazynu
stan_magazynu <- max(stan_magazynu - z_magazynu/sprawnosc_magazynowania, 0)
brakuje <- brakuje - z_magazynu
dane_z_magazynem$DokupioneZSieci[i] <- brakuje
}
}
# Podsumowanie kosztów dla każdej pojemności
roczne_koszty_magazyn <- dane_z_magazynem %>%
group_by(Rok) %>%
summarise(RoczneWydatkiZakupionejEnergii = sum(DokupioneZSieci * RCE, na.rm = TRUE))
wyniki_rozne_pojemnosci <- rbind(wyniki_rozne_pojemnosci, transform(roczne_koszty_magazyn, PojemnoscMagazynu = pojemnosc))
}
# Wykres Słupkowy Porównujący Roczne Koszty Zakupionej Energii dla Różnych Pojemności Magazynu
ggplot(wyniki_rozne_pojemnosci, aes(x = factor(Rok), y = RoczneWydatkiZakupionejEnergii, fill = factor(PojemnoscMagazynu))) +
geom_bar(stat = "identity", position = position_dodge()) +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12),
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
legend.title = element_text(face = "bold"),
legend.position = "bottom"
) +
labs(
title = "Roczne Koszty Zakupionej Energii w Zależności od Pojemności Magazynu",
x = "Rok",
y = "Koszt Zakupionej Energii [PLN]",
fill = "Pojemność Magazynu"
) +
geom_text(aes(label=sprintf("%.2f", RoczneWydatkiZakupionejEnergii)), vjust=-0.3, position = position_dodge(0.9), size=3)
ggsave("hc4.2v2.png", width = 11.5, height = 11, dpi = 300)
# Obliczanie skumulowanych wydatków
wynik_finalowy <- wyniki_rozne_pojemnosci %>%
arrange(Rok, PojemnoscMagazynu) %>%
group_by(PojemnoscMagazynu) %>%
mutate(SkumulowaneWydatki = cumsum(RoczneWydatkiZakupionejEnergii)) %>%
ungroup()
# Tworzenie wykresu
hc4.2v2 <- hchart(wynik_finalowy, "line", hcaes(x = Rok, y = SkumulowaneWydatki, group = PojemnoscMagazynu)) %>%
hc_title(text = "Skumulowane Roczne Wydatki na Energię przy Użyciu Magazynu Energii") %>%
hc_subtitle(text = "Analiza wydatków na energię na przestrzeni lat z uwzględnieniem różnych pojemności magazynów") %>%
hc_xAxis(title = list(text = "Rok"), tickInterval = 1) %>%
hc_yAxis(title = list(text = "Skumulowane Wydatki [PLN]")) %>%
hc_colors(c("#7cb5ec", "#434348", "#90ed7d", "#f7a35c", "#8085e9")) %>%
hc_legend(title = list(text = "Pojemność Magazynu"), enabled = TRUE, layout = "vertical", align = "right", verticalAlign = "middle", useHTML = TRUE, labelFormatter = JS("function() { return this.name + ' <span style=\"color: ' + this.color + '\">&#9679;</span>'; }")) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(headerFormat = "<b>Rok {point.key}</b><br/>",
pointFormat = "<span style='color:{series.color}'>\u25CF</span> {series.name}: {point.y:,.2f} zł<br/>",
shared = TRUE,
crosshairs = TRUE)
hchart(wynik_finalowy, "line", hcaes(x = Rok, y = SkumulowaneWydatki, group = PojemnoscMagazynu)) %>%
hc_title(text = "Skumulowane Roczne Wydatki na Energię przy Użyciu Magazynu Energii") %>%
hc_subtitle(text = "Analiza wydatków na energię na przestrzeni lat z uwzględnieniem różnych pojemności magazynów") %>%
hc_xAxis(title = list(text = "Rok"), tickInterval = 1) %>%
hc_yAxis(title = list(text = "Skumulowane Wydatki [PLN]")) %>%
hc_colors(c("#7cb5ec", "#434348", "#90ed7d", "#f7a35c", "#8085e9")) %>%
hc_legend(title = list(text = "Pojemność Magazynu"), enabled = TRUE, layout = "vertical", align = "right", verticalAlign = "middle", useHTML = TRUE, labelFormatter = JS("function() { return this.name + ' <span style=\"color: ' + this.color + '\">&#9679;</span>'; }")) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(headerFormat = "<b>Rok {point.key}</b><br/>",
pointFormat = "<span style='color:{series.color}'>\u25CF</span> {series.name}: {point.y:,.2f} zł<br/>",
shared = TRUE,
crosshairs = TRUE)
# Tworzenie wykresu
hc4.2v2 <- hchart(wynik_finalowy, "line", hcaes(x = Rok, y = SkumulowaneWydatki, group = PojemnoscMagazynu)) %>%
hc_title(text = "Skumulowane Roczne Wydatki na Energię przy Użyciu Magazynu Energii") %>%
hc_subtitle(text = "Analiza wydatków na energię na przestrzeni lat z uwzględnieniem różnych pojemności magazynów") %>%
hc_xAxis(title = list(text = "Rok"), tickInterval = 1) %>%
hc_yAxis(title = list(text = "Skumulowane Wydatki [PLN]")) %>%
hc_colors(c("#7cb5ec", "#434348", "#90ed7d", "#f7a35c", "#8085e9")) %>%
hc_legend(title = list(text = "Pojemność Magazynu"), enabled = TRUE, layout = "vertical", align = "right", verticalAlign = "middle", useHTML = TRUE, labelFormatter = JS("function() { return this.name + ' <span style=\"color: ' + this.color + '\">&#9679;</span>'; }")) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(headerFormat = "<b>Rok {point.key}</b><br/>",
pointFormat = "<span style='color:{series.color}'>\u25CF</span> {series.name}: {point.y:,.2f} zł<br/>",
shared = TRUE,
crosshairs = TRUE)
# Zapis do pliku HTML i konwersja na obraz PNG
htmlwidgets::saveWidget(hc4.2v2, "hc4.2v2.html", selfcontained = TRUE)
webshot::webshot("hc4.2v2.html", "hc4.2v2.png", delay = 5)
# Wykres Słupkowy Porównujący Roczne Koszty Zakupionej Energii dla Różnych Pojemności Magazynu
ggplot(wyniki_rozne_pojemnosci, aes(x = factor(Rok), y = RoczneWydatkiZakupionejEnergii, fill = factor(PojemnoscMagazynu))) +
geom_bar(stat = "identity", position = position_dodge()) +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12),
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
legend.title = element_text(face = "bold"),
legend.position = "bottom"
) +
labs(
title = "Roczne Koszty Zakupionej Energii w Zależności od Pojemności Magazynu",
x = "Rok",
y = "Koszt Zakupionej Energii [PLN]",
fill = "Pojemność Magazynu"
) +
geom_text(aes(label=sprintf("%.2f", RoczneWydatkiZakupionejEnergii)), vjust=-0.3, position = position_dodge(0.9), size=3)
ggsave("hc4.2v1.png", width = 11.5, height = 11, dpi = 300)
